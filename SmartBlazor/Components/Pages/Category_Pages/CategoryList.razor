@page "/category"
@inject ICategoryRepository _categoryRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/create" class="btn btn-lg btn-secondary" style="width:250px;">
                        <i class="bi bi-plus-square"></i> Add New Category
                    </a>
                </div>
            </div>
        </div>
        @if (Categories.Any())
        {
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Categories)
                    {
                        <tr>
                            <td>@category.Name</td>
                            <td>
                                <a href="@($"category/update/{category.Id}")" class="btn btn-primary">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                                <button href="@($"category/delete/{category.Id}")" class="btn btn-danger">
                                    <i class="bi bi-trash3"></i> Delete
                                </button>
                            </td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
}

@code {
    // private bool IsProcessing { get; set; } = false;
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();


    // protected override async Task OnInitializedAsync()
    // {
    //     IsProcessing = true;
    //     await LoadCategories();
    //     IsProcessing = false;
    // }

    protected override async Task OnAfterRenderAsync(bool firsRender)
    // protected override async Task OnParametersSetAsync()
    {
        if (firsRender)
        {
            var uri = new Uri(NavigationManager.Uri);
            var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
            
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged();

            if (query.TryGetValue("type", out var type) && query.TryGetValue("message", out var message))
            {
                await JSRuntime.InvokeVoidAsync("ShowToastr", type, message);
            }
        }
    }

    private async Task LoadCategories()
    {
        Categories = await _categoryRepository.GetCategories();
    }
}
